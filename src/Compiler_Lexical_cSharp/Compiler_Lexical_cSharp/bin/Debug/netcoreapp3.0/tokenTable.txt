CLASS                       	KEYWRD_CLASS
LargestCommonDenominator    	_VAR
{                           	LEFTBRACK
CONST                       	KEYWRD_CONST
M                           	_VAR
=                           	_ASSIGN
7                           	_DIGIT
,                           	_COMMA
N                           	_VAR
=                           	_ASSIGN
85                          	_DIGIT
;                           	_SEMICOLON
VAR                         	KEYWRD_VAR
X                           	_VAR
,                           	_COMMA
Y                           	_VAR
,                           	_COMMA
Z                           	_VAR
,                           	_COMMA
Q                           	_VAR
,                           	_COMMA
R                           	_VAR
;                           	_SEMICOLON
//                          	_COMMENT
TestComment                 	_VAR
PROCEDURE                   	KEYWRD_PROCEDURE
Multiply                    	_VAR
(                           	LEFTPARHEN
)                           	RIGHTPARHEN
{                           	LEFTBRACK
VAR                         	KEYWRD_VAR
A                           	_VAR
,                           	_COMMA
B                           	_VAR
;                           	_SEMICOLON
A                           	_VAR
=                           	_ASSIGN
X                           	_VAR
;                           	_SEMICOLON
B                           	_VAR
=                           	_ASSIGN
Y                           	_VAR
;                           	_SEMICOLON
Z                           	_VAR
=                           	_ASSIGN
0                           	_DIGIT
;                           	_SEMICOLON
WHILE                       	KEYWRD_WHILE
B                           	_VAR
>                           	_relOP
0                           	_DIGIT
DO                          	KEYWRD_DO
{                           	LEFTBRACK
IF                          	KEYWRD_IF
ODD                         	KEYWRD_ODD
B                           	_VAR
THEN                        	KEYWRD_THEN
Z                           	_VAR
=                           	_ASSIGN
Z                           	_VAR
+                           	_addOP
A                           	_VAR
;                           	_SEMICOLON
A                           	_VAR
=                           	_ASSIGN
2                           	_DIGIT
*                           	_mOP
A                           	_VAR
;                           	_SEMICOLON
B                           	_VAR
=                           	_ASSIGN
B                           	_VAR
/                           	_mOP
2                           	_DIGIT
;                           	_SEMICOLON
}                           	RIGHTBRACK
}                           	RIGHTBRACK
/*                          	_LCOMMENT
Stuff                       	_VAR
*/                          	_RCOMMENT
PROCEDURE                   	KEYWRD_PROCEDURE
Divide                      	_VAR
(                           	LEFTPARHEN
)                           	RIGHTPARHEN
{                           	LEFTBRACK
VAR                         	KEYWRD_VAR
W                           	_VAR
;                           	_SEMICOLON
R                           	_VAR
=                           	_ASSIGN
X                           	_VAR
;                           	_SEMICOLON
Q                           	_VAR
=                           	_ASSIGN
0                           	_DIGIT
;                           	_SEMICOLON
W                           	_VAR
=                           	_ASSIGN
Y                           	_VAR
;                           	_SEMICOLON
WHILE                       	KEYWRD_WHILE
W                           	_VAR
<=                          	_relOP
R                           	_VAR
DO                          	KEYWRD_DO
W                           	_VAR
=                           	_ASSIGN
2                           	_DIGIT
*                           	_mOP
W                           	_VAR
;                           	_SEMICOLON
WHILE                       	KEYWRD_WHILE
W                           	_VAR
>                           	_relOP
Y                           	_VAR
DO                          	KEYWRD_DO
{                           	LEFTBRACK
Q                           	_VAR
=                           	_ASSIGN
2                           	_DIGIT
*                           	_mOP
Q                           	_VAR
;                           	_SEMICOLON
W                           	_VAR
=                           	_ASSIGN
W                           	_VAR
/                           	_mOP
2                           	_DIGIT
;                           	_SEMICOLON
IF                          	KEYWRD_IF
W                           	_VAR
<=                          	_relOP
R                           	_VAR
THEN                        	KEYWRD_THEN
{                           	LEFTBRACK
R                           	_VAR
=                           	_ASSIGN
R                           	_VAR
-                           	_addOP
W                           	_VAR
;                           	_SEMICOLON
Q                           	_VAR
=                           	_ASSIGN
Q                           	_VAR
+                           	_addOP
1                           	_DIGIT
;                           	_SEMICOLON
}                           	RIGHTBRACK
}                           	RIGHTBRACK
}                           	RIGHTBRACK
PROCEDURE                   	KEYWRD_PROCEDURE
GCD                         	_VAR
(                           	LEFTPARHEN
)                           	RIGHTPARHEN
{                           	LEFTBRACK
VAR                         	KEYWRD_VAR
F                           	_VAR
,                           	_COMMA
G                           	_VAR
;                           	_SEMICOLON
F                           	_VAR
=                           	_ASSIGN
X                           	_VAR
;                           	_SEMICOLON
G                           	_VAR
=                           	_ASSIGN
Y                           	_VAR
;                           	_SEMICOLON
WHILE                       	KEYWRD_WHILE
F                           	_VAR
!=                          	_relOP
G                           	_VAR
DO                          	KEYWRD_DO
{                           	LEFTBRACK
IF                          	KEYWRD_IF
F                           	_VAR
<                           	_relOP
G                           	_VAR
THEN                        	KEYWRD_THEN
G                           	_VAR
=                           	_ASSIGN
G                           	_VAR
-                           	_addOP
F                           	_VAR
;                           	_SEMICOLON
IF                          	KEYWRD_IF
G                           	_VAR
<                           	_relOP
F                           	_VAR
THEN                        	KEYWRD_THEN
F                           	_VAR
=                           	_ASSIGN
F                           	_VAR
-                           	_addOP
G                           	_VAR
;                           	_SEMICOLON
}                           	RIGHTBRACK
Z                           	_VAR
=                           	_ASSIGN
F                           	_VAR
;                           	_SEMICOLON
}                           	RIGHTBRACK
/*                          	_LCOMMENT
Main                        	_VAR
Program                     	_VAR
.                           	_PERIOD
*/                          	_RCOMMENT
X                           	_VAR
=                           	_ASSIGN
M                           	_VAR
;                           	_SEMICOLON
Y                           	_VAR
=                           	_ASSIGN
N                           	_VAR
;                           	_SEMICOLON
CALL                        	KEYWRD_CALL
Multiply                    	_VAR
(                           	LEFTPARHEN
)                           	RIGHTPARHEN
;                           	_SEMICOLON
X                           	_VAR
=                           	_ASSIGN
25                          	_DIGIT
;                           	_SEMICOLON
Y                           	_VAR
=                           	_ASSIGN
3                           	_DIGIT
;                           	_SEMICOLON
CALL                        	KEYWRD_CALL
Divide                      	_VAR
(                           	LEFTPARHEN
)                           	RIGHTPARHEN
;                           	_SEMICOLON
X                           	_VAR
=                           	_ASSIGN
84                          	_DIGIT
;                           	_SEMICOLON
Y                           	_VAR
=                           	_ASSIGN
36                          	_DIGIT
;                           	_SEMICOLON
CALL                        	KEYWRD_CALL
GCD                         	_VAR
(                           	LEFTPARHEN
)                           	RIGHTPARHEN
;                           	_SEMICOLON
}                           	RIGHTBRACK
